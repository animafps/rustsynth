name: build
on:
  push:
  pull_request:

jobs:
  build-test-lint-linux:
    name: Linux - build, test and lint
    runs-on: ubuntu-latest
    env: 
      LD_LIBRARY_PATH: /usr/local/lib
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install VapourSynth
        uses: animafps/install-vapoursynth-action@master
        with:
          version: 72
          cache: true
      - name: Build
        run: |
          rustup update nightly && rustup default nightly && rustup component add clippy rustfmt
          cargo build
      - name: Test
        run: |
          cargo test --workspace --lib --bins --tests --benches 
      - name: Lint
        run: |
          cargo clippy
      - name: Check format
        run: |
          cargo fmt -- --check
  build-test-lint-macos:
    name: macOS - build, test and lint
    runs-on: macos-latest
    env:
      VAPOURSYNTH_LIB_DIR: /opt/homebrew/lib/
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install VapourSynth
        run: |
          brew install vapoursynth
      - name: Build
        run: |
          rustup update nightly && rustup default nightly && rustup component add clippy rustfmt
          cargo build
      - name: Test
        run: |
          cargo test --workspace --lib --bins --tests --benches 
      - name: Lint
        run: |
          cargo clippy
      - name: Check format
        run: |
          cargo fmt -- --check
  build-test-lint-windows:
    name: Windows - build, test and lint
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive
      - name: Install VapourSynth
        run: |
          curl -L -o vsinstall.ps1 https://github.com/vapoursynth/vapoursynth/releases/download/R72/Install-Portable-VapourSynth-R72.ps1
          powershell -ExecutionPolicy Bypass -File .\vsinstall.ps1 -Unattended
          echo "VAPOURSYNTH_LIB_DIR=${{ github.workspace }}\vapoursynth-portable" >> $GITHUB_ENV
          echo "${{ github.workspace }}\vapoursynth-portable" >> $GITHUB_PATH
      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy
      - name: Build
        run: |
          cargo build
      - name: Test
        run: |
          cargo test --workspace --lib --bins --tests --benches
      - name: Lint
        run: |
          cargo clippy
      - name: Check format
        run: |
          cargo fmt -- --check
