name: build
on:
  push:
  pull_request:

jobs:
  build-test-lint-linux:
    name: Linux - build, test and lint
    runs-on: ubuntu-latest
    env: 
      LD_LIBRARY_PATH: /usr/local/lib
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Build vapoursynth
        run: |
          sudo apt-get update
          sudo apt-get install g++ make autoconf automake libtool pkg-config nasm git
          git clone --branch release-3.0.6 --depth 1 https://github.com/sekrit-twc/zimg.git
          cd zimg   
          ./autogen.sh
          ./configure
          make
          sudo make install
          cd ..
          sudo apt-get install cython3
          cd rustsynth-sys/vapoursynth
          ./autogen.sh
          ./configure
          make
          sudo make install
      - name: Build
        run: |
          cargo build
      - name: Test
        run: |
          cargo test --workspace --lib --bins --tests --benches 
      - name: Lint
        run: |
          cargo clippy
      - name: Check format
        run: |
          cargo fmt -- --check
  build-test-lint-macos:
    name: macOS - build, test and lint
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install VapourSynth
        run: |
          brew install vapoursynth
      - name: Build
        run: |
          cargo build
      - name: Test
        run: |
          cargo test --workspace --lib --bins --tests --benches 
      - name: Lint
        run: |
          cargo clippy
      - name: Check format
        run: |
          cargo fmt -- --check
#  build-test-lint-windows:
#    name: Windows - build, test and lint
#    runs-on: windows-latest
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          submodules: recursive
#      - name: Install VapourSynth
#        run: |
#          https://github.com/vapoursynth/vapoursynth/releases/download/R72/VapourSynth64-Portable-R72.zip
#      - name: Set up Rust
#        uses: actions-rust-lang/setup-rust-toolchain@v1
#        with:
#          toolchain: stable
#          override: true
#          components: rustfmt, clippy
#      - name: Build
#        run: |
#          cargo build
#      - name: Test
#        run: |
#          cargo test --workspace --lib --bins --tests --benches 
#     - name: Lint
#        run: |
#          cargo clippy
#      - name: Check format
#        run: |
#          cargo fmt -- --check
